// <auto-generated />
using System;
using Backend_INFOM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend_INFOM.Migrations
{
    [DbContext(typeof(INFOMContext))]
    [Migration("20240202203436_NuevaMigracion3")]
    partial class NuevaMigracion3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Backend_INFOM.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("IdMarca");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("Backend_INFOM.Models.Presentacion", b =>
                {
                    b.Property<int>("IdPresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_presentacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPresentacion"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("IdPresentacion");

                    b.ToTable("presentacion", (string)null);
                });

            modelBuilder.Entity("Backend_INFOM.Models.Producto", b =>
                {
                    b.Property<int?>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdProducto"), 1L, 1);

                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("DescripcionProducto")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("descripcion_producto");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<int?>("IdPresentacion")
                        .HasColumnType("int")
                        .HasColumnName("id_presentacion");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.Property<int?>("IdZona")
                        .HasColumnType("int")
                        .HasColumnName("id_zona");

                    b.Property<int?>("Iva")
                        .HasColumnType("int")
                        .HasColumnName("iva");

                    b.Property<int?>("MarcaIdMarca")
                        .HasColumnType("int");

                    b.Property<double?>("Peso")
                        .HasColumnType("float")
                        .HasColumnName("peso");

                    b.Property<double?>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.Property<int?>("PresentacionIdPresentacion")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorIdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<int?>("ZonaIdZona")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdPresentacion");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdZona");

                    b.HasIndex("MarcaIdMarca");

                    b.HasIndex("PresentacionIdPresentacion");

                    b.HasIndex("ProveedorIdProveedor");

                    b.HasIndex("ZonaIdZona");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("Backend_INFOM.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("IdProveedor");

                    b.ToTable("proveedor", (string)null);
                });

            modelBuilder.Entity("Backend_INFOM.Models.Zona", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_zona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZona"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("IdZona");

                    b.ToTable("zona", (string)null);
                });

            modelBuilder.Entity("Backend_INFOM.Models.Producto", b =>
                {
                    b.HasOne("Backend_INFOM.Models.Marca", "IdMarcaNavigation")
                        .WithMany()
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_producto_marca");

                    b.HasOne("Backend_INFOM.Models.Presentacion", "IdPresentacionNavigation")
                        .WithMany()
                        .HasForeignKey("IdPresentacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_producto_presentacion");

                    b.HasOne("Backend_INFOM.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany()
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_producto_proveedor");

                    b.HasOne("Backend_INFOM.Models.Zona", "IdZonaNavigation")
                        .WithMany()
                        .HasForeignKey("IdZona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_producto_zona");

                    b.HasOne("Backend_INFOM.Models.Marca", null)
                        .WithMany("Productos")
                        .HasForeignKey("MarcaIdMarca");

                    b.HasOne("Backend_INFOM.Models.Presentacion", null)
                        .WithMany("Productos")
                        .HasForeignKey("PresentacionIdPresentacion");

                    b.HasOne("Backend_INFOM.Models.Proveedor", null)
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorIdProveedor");

                    b.HasOne("Backend_INFOM.Models.Zona", null)
                        .WithMany("Productos")
                        .HasForeignKey("ZonaIdZona");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdPresentacionNavigation");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdZonaNavigation");
                });

            modelBuilder.Entity("Backend_INFOM.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Backend_INFOM.Models.Presentacion", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Backend_INFOM.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Backend_INFOM.Models.Zona", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
